Revised Specification
Play 
o	Having the flipper fully animated
o	Smooth animations
o	Having the ball speed throughout the running process. 
o	Linking key presses to activating certain gizmos 
o	Switching modes mid game. 
o	The current position of the ball + gizmos will be saved. 
o	If flipper is mid animation, delay the switching till the animation is done.
o	Quit application, ask if the user wants to save. Yes/No.
o	Gizmos stay within their grids while animation + gameplay.
o	Responsive gizmos when the ball touched the gizmos or anything in the playing area. 
o	 Colour changes
o	Ball bounces back in expected direction
o	Continuous velocity of the ball. 
o	Gravity value : 25L/2 sec
o	Know the speed of the ball and it’s velocity
o	Continuous modification of the ball of the effect of friction. 
o	Have good collision detection
o	No overlapping lines & etc
o	 Trigger a flipper, then you are able to re-trigger it once it has gone back to its original position 
o	We need to pick an approach in terms how to deal with this
o	The absorber should take in a ball, then shoot it out . 
o	Flippers animate to 90 degrees of their original position. They have to move at a certain speed.
o	Ball refracts against surfaces, such as the gizmos and outer walls. (physics should do it for us)

Build 
o	Add gizmos to the grid
o	Gizmos must be within the contains of a segment of a grid
o	Moving gizmos from one position to another
o	Highlight the component
o	Drag and drop motion
o	Rotate a component 90 degrees
o	Only allow rotation on gizmos with  a rotational symmetry 
o	Connect gizmos 
o	Show which gizmos are connected 
o	When a ball hits a connected cmp, all of the cmp will highlight. 
o	You can connect multiple gizmos to 1 gizmo
o	Triggers do not chain 
o	Delete a gizmo 
o	Verify that the user wants to delete the component 
o	Clear the whole screen
o	Verify that the user wants to delete the component 
o	Add a ball 
o	Verify the position and velocity 
o	Ball must not overlap any components except the absorber
o	Ball can’t be placed in the absorber
o	Save to a file named by the user
o	Save in the standard format for gizmoball 
o	Incl info about all gizmos 
o	Load a file for gizmos 
o	Switch to running 
o	Quit 
o	Set the gravity
o	Can change the gravity if we want
o	When editing components, add the components to the command script. 
o	Make sure that all of the components have good collision detection and etc
o	The saving format is :
o	Gizmos :
[shape] [shape id] [x position] [y position]
o	And etc, see MIT for the file formats


